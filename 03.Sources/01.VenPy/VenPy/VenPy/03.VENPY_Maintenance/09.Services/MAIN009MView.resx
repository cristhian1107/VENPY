<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        T8P/+D/D//wfh//+Dwf//wAP//+AD///wD8=
</value>
  </data>
</root>