<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAGwDAABsAwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAwAEAQMABAEDAAQB
        AwAEAQMABAEDAAQBAwAEAQMABAEDAAQBAwAEAQMABQEDAAQBAwADAAMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAQIABAEDAAQBAwAEAQMABAEDAQQB
        AwMEAQMEBAEDBAQBAwMEAQMBBAEDAQQBAwEEAQMCBAEDAwQBAwQEAQMEBAEDAwQBAwEEAQMABAEDAAQB
        AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAEDAAQBAwAEAQMABAEDAQQB
        AwMEAQMABAEDAAQBAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAwAEAQMABAEDAAQB
        AwQEAQMBBAEDAAQBAwAEAQMAAAAAAAAAAAAAAAAAAAAAAAQBAwAEAQMABAEDAAQBAwAEAQMABAEDAAQB
        AwAEAQMBBAEDAAQBAw4EAQNDBAEDdwQBA50EAQO2BAEDxQQBA8sEAQPLBAEDxAQBA7QEAQOZBAEDcQQB
        AzwEAQMJBAEDAAQBAwEEAQMBBAEDAAQBAwAEAQMABAEDAAQBAwAEAQMABAEDAQQBAwQEAQMDBAEDAQkD
        AwAEAQMBBAEDAAQBAxEEAQOOBAED6wQBA/8EAQP+BAED/wQBA/8EAQP/BAED/wQBA/8EAQP/BAED/wQB
        A/8EAQP/BAED/wQBA+QEAQODBAEDDQQBAwAEAQMBCAICAAQBAwEEAQMEBAEDBAQBAwEEAQMBBAEDAAQB
        AwAAAAAABAEDAAQBAwEEAQMABAEDtwQBA/8EAQP8BAED/wQBA/8EAQP/BAED9QQBA+oEAQPlBAED5QQB
        A+sEAQP3BAED/wQBA/8EAQP/BAED/AQBA/8EAQOzBAEDAAQBAwEEAQMAAAAAAAQBAwAEAQMABAEDAQQB
        AxcEAQNzBAEDvAQBA9kEAQPlBAED4wQBA9AEAQP2BAED/AQBA/8EAQOyBAEDTQQBAzgEAQMiBAEDFQQB
        Aw8EAQMPBAEDFQQBAyQEAQM7BAEDVAQBA70EAQP/BAED+wQBA/cEAQPTBAED4wQBA+UEAQPYBAEDuAQB
        A20EAQMUBAED6gQBA/gEAQPBBAEDpgQBA5gEAQObBAEDqwQBA8wEAQP9BAED/wQBA8sEAQMqBAEDAAQB
        AwEEAQMAAAAAAAAAAAAEAQMABAEDAQQBAwAEAQM0BAED0wQBA/8EAQP9BAEDywQBA6kEAQObBAEDmAQB
        A6cEAQPEBAED+gQBA+cEAQPdBAED4gQBAx4EAQMABAEDAgQBAwIEAQMABAEDaQQBA/8EAQP9BAED/wQB
        A/4EAQPKBAEDhAQBA1oEAQNIBAEDSAQBA1wEAQOJBAED0QQBA/8EAQP+BAED/QQBA/8EAQNhBAEDAAQB
        AwIEAQMCBAEDAAQBAyUEAQPmBAED2wQBAygEAQPUBAED/wQBA+YEAQPIBAEDzgQBA/MEAQP/BAEDpAQB
        A7YEAQP/BAED/gQBA/8EAQP/BAED/wQBA/8EAQP/BAED/wQBA/8EAQP/BAED/gQBA/8EAQO1BAEDpwQB
        A/8EAQPxBAEDzQQBA8kEAQPoBAED/wQBA9AEAQMlAwEDAAQBAwcEAQNYBAEDlwQBA6sEAQOoBAEDigQB
        AzwEAQMABAEDAwQBA1sEAQPHBAED+AQBA/8EAQP/BAED/wQBA/8EAQP/BAED/wQBA/gEAQPEBAEDWAQB
        AwIEAgMABAEDPwQBA4wEAQOoBAEDqgQBA5UEAQNUBAEDBgMAAgAEAQMCBAEDAgQBAwAEAQMeBAEDagQB
        A1sEAQMNBAEDAAQBAwMEAQMCBAEDAAQAAwAEAQMkBAEDVQQBA3EEAQN8BAEDfAQBA3AEAQNUBAEDIgIC
        AgAEAQMABAEDAgQBAwMEAQMABAEDDQQBA1sEAQNqBAEDHwQBAwAEAQMDBAEDAgQBAwIEAQMABAEDhgQB
        A/8EAQP4BAED/QQBA/oEAQNPBAEDAAQBAwMEAQMEBAEDBAQBAwADAAQAAwADAAQBAwoEAQMKAwADAAMA
        AwAEAQMABAEDBAQBAwQEAQMDBAEDAAQBA1AEAQP6BAED/QQBA/gEAQP/BAEDhgQBAwAEAQMCBAEDAAQB
        A0EEAQP/BAEDfAQBBAAEAQMMBAEDtgQBA/IEAQMRBAEDAAQBAwQEAQMABAEDLAQBA6IEAQPkBAED+AQB
        A/gEAQPkBAEDogQBAywEAQMABAEDBAQBAwAEAQMRBAED8gQBA7YEAQMMBAEEAAQBA3sEAQP/BAEDQQQB
        AwAEAQMABAEDlgQBA+QEAQMABAEDAgQBAwAEAQMkBAED/wQBA08EAQMABAEDAAQBA2wEAQP8BAED/wQB
        A/4EAQP/BAED/wQBA/4EAQP/BAED/AQBA2wEAQMABAEDAAQBA08EAQP/BAEDJAQBAwAEAQMCBAEDAAQB
        A+QEAQOWBAEDAAQBAwAEAQOWBAED5AQBAwAEAQMCBAEDAAQBAyQEAQP/BAEDUgQBAwAEAQNsBAED/wQB
        A/sEAQP/BAED6QQBA7YEAQO2BAED6QQBA/8EAQP7BAED/wQBA2wEAQMABAEDUgQBA/8EAQMkBAEDAAQB
        AwIEAQMABAED5AQBA5YEAQMABAEDAAQBA0EEAQP/BAEDewMBAwAEAQMMBAEDtgQBA/QEAQMJBAEDHwQB
        A/QEAQP+BAED/wQBA44EAQMLBAEDAAQBAwAEAQMLBAEDjgQBA/8EAQP+BAED9AQBAx8EAQMJBAED9AQB
        A7YEAQMMAwEDAAQBA3sEAQP/BAEDQQQBAwAEAQMCBAEDAAQBA4IEAQP/BAED9gQBA/wEAQP4BAEDUAQB
        AwAEAQOKBAED/wQBA/8EAQOUBAEDAAQBAwIEAQMDBAEDAwQBAwIEAQMABAEDlAQBA/8EAQP/BAEDigQB
        AwAEAQNRBAED+AQBA/wEAQP2BAED/wQBA4IEAQMABAEDAgQBAwAEAQMCBAEDAAQBAzAEAQN8BAEDbwQB
        AxsEAQMABAEDAAQBA8gEAQP/BAED9AQBAyAEAQMABAEDAwUAAwAFAAMABAEDAwQBAwAEAQMgBAED9AQB
        A/8EAQPIBAEDAAQBAwAEAQMbBAEDbgQBA3wEAQMwBAEDAAQBAwIEAQMABAEDAAQBAwAEAQMCBgAEAAQB
        AwAEAQMABAEDAQQAAwAEAQMJBAED4QQBA/8EAQPRCQAJAAQBAwAEAQMABAEDAAQBAwAEAQMABAEDAAUA
        BAAEAQPRBAED/wQBA+EEAQMJAwADAAQBAwEEAQMABAEDAAQAAwAEAQMCBAEDAAQBAwAEAQMABAEDAAQB
        AwAEAQMCBAEDBAQBAwQEAQMCBAEDAAQBAwcEAQPdBAED/wQBA9cEAQMEBQEEAAQBAwAEAQMABAEDAAQB
        AwAFAQMABAEDBAQBA9cEAQP/BAED3QQBAwcEAQMABAEDAgQBAwQEAQMEBAEDAgQBAwAEAQMABAEDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAwAEAQMCBAEDAAQBA7wEAQP/BAED/QQBAzQEAQMABAEDBgQB
        AwEEAQMBBAEDBgQBAwAEAQM0BAED/QQBA/8EAQO8BAEDAAQBAwIEAQMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAEDAAQBAwQEAQMABAEDbwQBA/8EAQP/BAEDvQQB
        AwQEAQMABAEDAQQBAwEEAQMABAEDBAQBA70EAQP/BAED/wQBA28EAQMABAEDBAQBAwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAQMABAEDAQQBAwAEAQMOBAED2wQB
        A/8EAQP/BAEDxgQBAz8EAQMPBAEDDwQBAz4EAQPGBAED/wQBA/8EAQPbBAEDDgQBAwAEAQMBBAEDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAwAEAQMABAEDAgQB
        AwAEAQM8BAED9gQBA/8EAQP+BAED/gQBA+oEAQPqBAED/gQBA/4EAQP/BAED9gQBAzwEAQMABAEDAgQB
        AwAEAQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQB
        AwAEAQMABAEDAwQBAwAEAQM1BAED2AQBA/8EAQP+BAED/wQBA/8EAQP+BAED/wQBA9gEAQM1BAEDAAQB
        AwMEAQMABAEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABAEDAAQBAwAEAQMABAEDAgQBAwAEAQMIBAEDWwQBA6kEAQPJBAEDyAQBA6kEAQNbBAEDCAQB
        AwAEAQMCBAEDAAQBAwAEAQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABAEDAAQBAwAEAQMABAEDAgQBAwEEAQMABAEDAAAAAAAAAAAABAEDAAQB
        AwAEAQMBBAEDAgQBAwAEAQMABAEDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAEDAAQBAwAEAQMABAEDAQQBAwQEAQMDBAEDAQQB
        AwEEAQMDBAEDBAQBAwEEAQMABAEDAAQBAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAwAEAQMABAEDAAQB
        AwAEAQMABAEDAAQBAwAEAQMABAEDAAQBAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wD//8gAF/+i/0X8CAAQMCAABAUgAASgAAAAAACZAAEgAASAAA
        AACAgAEBISAMhECKUQKIUAoRlGAGKZRAAimIAYARQIQhAqGEIYWVAACpQQAAgvyEIT/8gkE//IABP/5A
        An/+oAV//1AK//8lpP//0Av///Q///////8=
</value>
  </data>
</root>